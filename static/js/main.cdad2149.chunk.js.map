{"version":3,"sources":["Components/Table/Table.module.css","Components/Search/Search.module.css","Components/Pagination/Pagination.module.css","Components/Search/Search.jsx","Components/Table/Table.jsx","Components/Pagination/Pagination.jsx","Components/ProfileInfo/ProfileInfo.jsx","Components/info.js","Components/global.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Search","props","className","st","SearchContainer","FormContainer","method","placeholder","onChange","e","searchBy","target","value","StateFilter","name","size","filterByState","statesList","map","elem","stateName","id","UserRow","onClick","evt","showProfile","parentElement","uniqueId","Table","userId","firstName","lastName","email","phone","state","usersList","users","u","index","adress","pos","sortDirection","field","sortBy","sortASC","ContentTable","sortTableBy","Pagination","totalUsersCount","pageSize","currentUsersPage","selectCurrentPage","onDecrement","onIncrement","pagesCount","Math","ceil","pages","i","push","prevBtn","p","PaginationActive","onPageChanged","dateTime","nextBtn","ProfileInfo","profileInfo","streetAddress","city","zip","initialState","findUsers","counter","usersPage","lastPage","currentSearch","searchString","searchState","getLastPage","totalUsers","floor","usersState","App","useState","setUsers","useEffect","getUsers","a","callUsers","usersFromServer","fetch","response","json","data","length","setState","usersOnCurrentPage","pageNumber","getUsersOnCurrentPage","statesListArray","idState","forEach","el","includes","getStatesList","sortByFieldASC","b","sortInState","sortedUsers","sort","sortByFieldDESC","window","result","console","log","toString","description","sortby","newProfile","find","UId","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cdad2149.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Table\":\"Table_Table__1NKVZ\",\"TableActive\":\"Table_TableActive__2Pn4U\",\"ContentTable\":\"Table_ContentTable__Itpjj\",\"userId\":\"Table_userId__2o3EN\",\"sort\":\"Table_sort__2Cwll\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchContainer\":\"Search_SearchContainer__1aFHF\",\"Search\":\"Search_Search__3Kln8\",\"StateFilter\":\"Search_StateFilter__Yep-h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Pagination\":\"Pagination_Pagination__y4C2X\",\"PaginationActive\":\"Pagination_PaginationActive__8Sq4n\",\"prevBtn\":\"Pagination_prevBtn__2GDk_\",\"nextBtn\":\"Pagination_nextBtn__2JGbN\"};","import React from \"react\";\r\nimport st from './Search.module.css'\r\n\r\n\r\nconst Search = (props) => {\r\n    return (\r\n\r\n        <div className={st.SearchContainer}>\r\n            <form className={st.FormContainer} method=\"GET\">\r\n            <input className={st.Search} placeholder='Search by name...'\r\n                   onChange={(e)=>{\r\n                       props.searchBy(e.target.value, 'byString')\r\n                   }}/>\r\n                   </form>\r\n\r\n                <select className={st.StateFilter} name=\"State\" size='1'\r\n                        onChange={(e) => {\r\n                    props.filterByState(e.target.value, 'byState')\r\n\r\n                }}>\r\n                    <option value=\"SelectNone\">Filter by state</option>\r\n                    {props.statesList.map(elem => <option key={elem.id} value={elem.stateName}>{elem.stateName}</option>)}\r\n                </select>\r\n                \r\n        </div>\r\n    )\r\n}\r\nexport default Search;","import React from \"react\";\r\nimport st from \"./Table.module.css\"\r\n\r\nconst UserRow = (props) => {\r\n    return (\r\n        <div onClick={(evt)=>{\r\n            props.showProfile(evt.target.parentElement.id)\r\n        }}>\r\n            <div id = {props.uniqueId} className={st.Table} >\r\n                <div className={st.userId}>{props.id}</div>\r\n                <div>{props.firstName}</div>\r\n                <div>{props.lastName}</div>\r\n                <div>{props.email}</div>\r\n                <div>{props.phone}</div>\r\n                <div>{props.state}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Table = (props) => {\r\n    const usersList = props.users.map((u, index) => (\r\n        <UserRow key={index}\r\n                 id={u.id}\r\n                 firstName={u.firstName}\r\n                 lastName={u.lastName}\r\n                 email={u.email}\r\n                 phone={u.phone}\r\n                 state={u.adress.state}\r\n                 pos={u.index}\r\n                 showProfile={props.showProfile}\r\n                 uniqueId={u.uniqueId}\r\n        />)\r\n    )\r\n\r\n    const sortDirection = (field) => {\r\n        if (props.state.sortBy !== field)\r\n        {return <span> &#8226;</span>}\r\n\r\n        if (props.state.sortASC) {\r\n            return <span>&#9660;</span>\r\n        } else return <span>&#9650;</span>\r\n    }\r\n    return (\r\n        <div className={st.ContentTable}>\r\n            <div className={st.Table}>\r\n                <div className={st.userId} onClick={(evt) => {\r\n                    props.sortTableBy('id')\r\n                }}><p>id {sortDirection('id')}</p></div>\r\n                <div onClick={(evt) => {\r\n                    props.sortTableBy('firstName')\r\n                }}><p>First name{sortDirection('firstName')}</p>\r\n                </div>\r\n                <div onClick={(evt) => {\r\n                    props.sortTableBy('lastName')\r\n                }}><p>Last Name {sortDirection('lastName')}</p>\r\n                </div>\r\n                <div onClick={(evt) => {\r\n                    props.sortTableBy('email')\r\n                }}><p>Email{sortDirection('email')}</p>\r\n                </div>\r\n                <div onClick={(evt) => {\r\n                    props.sortTableBy('phone')\r\n                }}><p>Phone{sortDirection('phone')}</p>\r\n                </div>\r\n                <div onClick={(evt) => {\r\n                    props.sortTableBy('state')\r\n                }}><p>State{sortDirection('state')}</p>\r\n                </div>\r\n            </div>\r\n            {usersList}\r\n        </div>\r\n    )\r\n}\r\nexport default Table;","import React from \"react\";\r\nimport st from \"./Pagination.module.css\";\r\n\r\nconst Pagination = ({\r\n                       totalUsersCount, pageSize, currentUsersPage,\r\n                       selectCurrentPage, onDecrement, onIncrement\r\n                   }) => {\r\n    let pagesCount = Math.ceil(totalUsersCount / pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    const onPageChanged = (p) => {\r\n        selectCurrentPage(p)\r\n    }\r\n\r\n    return (\r\n        <div className={st.Pagination}>\r\n            <div className={st.prevBtn}\r\n                 onClick={(e) => {\r\n                     onDecrement()\r\n                 }}>Previous\r\n            </div>\r\n\r\n            {pages.map(p => {\r\n                return <div key={p.dateTime}\r\n                            className={(currentUsersPage === p) && st.PaginationActive}\r\n                            onClick={(e) => {\r\n                                onPageChanged(p);\r\n                            }}\r\n                >{p}</div>\r\n            })}\r\n\r\n            <div className={st.nextBtn}\r\n                 onClick = {(e) => {\r\n                onIncrement()\r\n            }}>Next\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Pagination;","import React from \"react\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    // debugger\r\n    return (\r\n        <div className=\"ProfileInfo\">\r\n            <p>Profile info</p>\r\n            <p>Selected profile: <span>{props.profileInfo.firstName}{props.profileInfo.lastName}</span></p>\r\n            <p>Description: <span>et lacus magna dolor...</span></p>\r\n            <p>Address: <span>{props.profileInfo.adress.streetAddress}</span></p>\r\n            <p>City: <span>{props.profileInfo.adress.city}</span></p>\r\n            <p>State: <span>{props.profileInfo.adress.state}</span></p>\r\n            <p>Index: <span>{props.profileInfo.adress.zip}</span></p>\r\n        </div>\r\n    )\r\n}\r\nexport default ProfileInfo;","export let initialState = {\r\n    profileInfo:\r\n        {\r\n            \"id\": '-',\r\n            \"firstName\": \"\",\r\n            \"lastName\": \"-\",\r\n            \"email\": \"-\",\r\n            \"phone\": \"-\",\r\n            \"adress\": {\r\n                \"streetAddress\": \"-\",\r\n                \"city\": \"-\",\r\n                \"state\": \"-\",\r\n                \"zip\": \"-\"\r\n            },\r\n            \"description\": \"-\",\r\n            \"uniqueId\": '0'\r\n        },\r\n    findUsers:[],\r\n    users: [\r\n        {\r\n            \"id\": 1,\r\n            \"firstName\": \"\",\r\n            \"lastName\": \"-\",\r\n            \"email\": \"-\",\r\n            \"phone\": \"-\",\r\n            \"adress\": {\r\n                \"streetAddress\": \"-\",\r\n                \"city\": \"-\",\r\n                \"state\": \"-\",\r\n                \"zip\": \"-\"\r\n            },\r\n            \"description\": \"-\",\r\n           \"uniqueId\": '0'\r\n        },\r\n    ],\r\n    statesList: [\r\n        {id: 1, stateName: \"WI\"},\r\n        {id: 2, stateName: \"TN\"},\r\n        {id: 3, stateName: \"FL\"},\r\n        {id: 4, stateName: \"WI\"},\r\n        {id: 5, stateName: \"NE\"},\r\n        {id: 6, stateName: \"NY\"},\r\n    ],\r\n    counter: 1,\r\n    usersPage: 20,\r\n    lastPage: 1,\r\n    currentUsersPage: 1,\r\n    currentSearch: '',\r\n    sortBy: '',\r\n    sortASC: true,\r\n    searchString:'',\r\n    searchState:''\r\n}","export const getLastPage =(totalUsers, usersPage)=>{\r\n    let lastPage = 1;\r\n    if (totalUsers % usersPage === 0) {\r\n        lastPage = totalUsers / usersPage\r\n        return lastPage\r\n    } else {\r\n        lastPage =  Math.floor(totalUsers / usersPage) + 1\r\n        return lastPage\r\n    }\r\n}\r\n\r\nexport const getUsersOnCurrentPage = (pageNumber, users, usersPage) => {\r\n\r\n    if (users.length <= usersPage) return users\r\n\r\n    let usersOnCurrentPage = []\r\n\r\n    let lastPage = getLastPage(users.length, usersPage)\r\n    if (pageNumber !== lastPage) {\r\n        for (let i = (pageNumber - 1) * usersPage; i < (pageNumber) * usersPage; i++) {\r\n            usersOnCurrentPage.push(users[i])\r\n        }\r\n        return usersOnCurrentPage\r\n    } else {\r\n        for (let i = (pageNumber - 1) * usersPage; i < users.length; i++) {\r\n            usersOnCurrentPage.push(users[i])\r\n        }\r\n        return usersOnCurrentPage\r\n    }\r\n}\r\n\r\nexport const getStatesList =(users)=>{\r\n    let statesListArray=[]\r\n    let statesList=[]\r\n    let idState=0\r\n    users.forEach(el=>{\r\n        if (!statesListArray.includes(el.adress.state)) {\r\n            statesListArray.push(el.adress.state)\r\n            statesList.push({id:idState, stateName: el.adress.state})\r\n            idState=idState+1\r\n        }\r\n    })\r\n    return statesList\r\n}","import React, {useEffect, useState} from \"react\"\nimport './App.css';\nimport Search from \"./Components/Search/Search\";\nimport Table from \"./Components/Table/Table\";\nimport Pagination from \"./Components/Pagination/Pagination\";\nimport ProfileInfo from \"./Components/ProfileInfo/ProfileInfo\";\nimport {initialState} from \"./Components/info\";\nimport {getLastPage, getStatesList, getUsersOnCurrentPage} from \"./Components/global\";\n\nconst usersState = []\n\nfunction App() {\n\n    const requestURL = 'https://itrex-react-lab-files.s3.eu-central-1.amazonaws.com/react-test-api.json'\n    const [users, setUsers] = useState(usersState)\n\n    useEffect(() => {\n        const getUsers = async () => {\n            const usersFromServer = await callUsers()\n            setUsers(usersFromServer)\n        }\n        getUsers()\n    }, [])\n\n    const callUsers = async () => {\n        const response = await fetch(requestURL)\n        const data = await response.json()\n        // console.log('jsondata', data)\n        for (let i = 0; i < data.length; i++) {\n            data[i].uniqueId = i\n        }\n        return data\n    }\n    initialState.users = users\n    initialState.findUsers = users\n    initialState.lastPage = getLastPage(users.length, initialState.usersPage)\n\n    const [state, setState] = useState(initialState);\n\n    const usersOnCurrentPage = getUsersOnCurrentPage(state.currentUsersPage,\n        state.users,\n        state.usersPage,\n    )\n    let statesList = getStatesList(users)\n\n\n    const onDecrement = () => {\n        if (state.currentUsersPage !== 1) {\n            setState({...state, currentUsersPage: state.currentUsersPage - 1})\n        }\n    }\n    const onIncrement = () => {\n        if (state.currentUsersPage !== state.lastPage) {\n            setState({...state, currentUsersPage: state.currentUsersPage + 1})\n        }\n    }\n\n    const selectCurrentPage = (p) => {\n        setState({...state, currentUsersPage: p})\n    }\n    const sortByFieldASC = (field) => {\n        return (a, b) => a[field] > b[field] ? 1 : -1;\n    }\n    const sortByFieldDESC = (field) => {\n        return (a, b) => a[field] > b[field] ? -1 : 1;\n    }\n\n    const sortInState = (field) => {\n        let sortedUsers = []\n        if (state.sortBy !== field) {\n            sortedUsers = state.users.sort(sortByFieldASC(field))\n            setState({\n                ...state, users: state.users = sortedUsers,\n                sortASC: state.sortASC = false,\n                sortBy: state.sortBy = field\n            })\n        } else {\n\n            if (state.sortASC) {\n                sortedUsers = state.users.sort(sortByFieldASC(field))\n            } else {\n                sortedUsers = state.users.sort(sortByFieldDESC(field))\n            }\n            setState({\n                ...state, users: state.users = sortedUsers,\n                sortASC: !state.sortASC,\n                sortBy: state.sortBy = field\n            })\n        }\n\n\n    }\n    const sortTableBy = (sortby) => {\n        switch (sortby) {\n            case 'id' :\n                sortInState('id')\n                break\n            case 'firstName' :\n                sortInState('firstName')\n                break\n            case 'lastName' :\n                sortInState('lastName')\n                break\n            case 'phone' :\n                sortInState('phone')\n                break\n            case 'email' :\n                sortInState('email')\n                break\n            case 'state' :\n                sortInState('state')\n                break\n            default:\n                return 1\n        }\n    }\n\n    const filterByState = (field) => {\n        if (field === 'SelectNone') {\n            debugger\n            setState({\n                ...state, users: state.users = users,\n                searchState: state.searchState = '',\n                findUsers: state.findUsers=users\n            })\n        } else {\n            let result = []\n            users.forEach(elem => {\n                if (elem.adress.state === field) result.push(elem)\n            })\n            setState({\n                ...state, users: state.users = result,\n                searchState: state.searchState = field\n            })\n        }\n    }\n\n    const searchBy = (searchString, searchBy) => {\n        console.log('search string = ', searchString)\n\n        if (searchString !== '') {\n            let result = []\n            for (let i = 0; i < users.length; i++) {\n                let el = users[i]\n\n                if (el.id.toString().includes(searchString)) {\n                    result.push(el)\n                    continue\n                }\n                if (el.firstName.includes(searchString)) {\n                    result.push(el)\n                    continue\n                }\n                if (el.lastName.toString().includes(searchString)) {\n                    result.push(el)\n                    continue\n                }\n                if (el.email.toString().includes(searchString)) {\n                    result.push(el)\n                    continue\n                }\n                if (el.phone.toString().includes(searchString)) {\n                    result.push(el)\n                    continue\n                }\n                if (el.adress.streetAddress.toString().includes(searchString)) {\n                    result.push(el)\n                    continue\n                }\n                if (el.adress.city.toString().includes(searchString)) {\n                    result.push(el)\n                    continue\n                }\n                if (el.adress.state.toString().includes(searchString)) {\n                    result.push(el)\n                    continue\n                }\n                if (el.adress.zip.toString().includes(searchString)) {\n                    result.push(el)\n                    continue\n                }\n                if (el.description.toString().includes(searchString)) {\n                    result.push(el)\n                }\n            }\n            setState({...state, users: state.users = result})\n        } else setState({...state, users: state.users = users})\n    }\n\n    const showProfile = (userId) => {\n        console.log(userId)\n        let newProfile = {}\n        newProfile = state.users.find(UId => UId.uniqueId.toString() === userId)\n        setState({...state, profileInfo: state.profileInfo = newProfile})\n    }\n    window.state = state\n    return (\n        <div className=\"App\">\n            <main className={'Main'}>\n\n                    <Search statesList={statesList}\n                                filterByState={filterByState}\n                                searchBy={searchBy}\n                    />\n\n                    <Table users={usersOnCurrentPage}\n                            sortTableBy={sortTableBy}\n                            state={state}\n                            showProfile={showProfile}\n                    />\n                    <Pagination totalUsersCount={state.users.length}\n                            pageSize={state.usersPage}\n                            currentUsersPage={state.currentUsersPage}\n                            selectCurrentPage={selectCurrentPage}\n                            onDecrement={onDecrement}\n                            onIncrement={onIncrement}\n                    />\n                    <ProfileInfo profileInfo={state.profileInfo}/>\n            </main>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {initialState} from \"./Components/info\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App state={initialState}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n\n"],"sourceRoot":""}